# coding: utf-8

"""
    ORR Ont API Documentation

    The main ORR documentation is located at: http://mmisw.org/orrdoc/ ``` ###################################################### # NOTE #   OUT-OF-DATE for the time being. # Currently the swagger spec is maintained in the # https://github.com/mmisw/mmiorr-docs repo, which # is served at http://mmisw.org/orrdoc/api/ ###################################################### ``` __Note__: - We are in the process of writing this API documentation.   Please [let us know](https://github.com/mmisw/mmiorr-docs/issues) if you have any   questions or suggestions.  - Besides the documentation itself, this page also allows to directly exercise the API. - Actual requests from this page are against the endpoint at   `http://cor.esipfed.org/sparql`. This may change in a future version in   particular regarding a more general way of exercising the API (regardless   of concrete endpoint), or by allowing the selection of the particular endpoint.  - You can use the \"Authorize\" button above and enter your COR credentials to login   in this API interface. In this way you will be able to perform not only the basic   `GET` operations, but see expanded responses according to your access priviliges   and ontology visibility settings, as well as perform other operations as listed below.   # noqa: E501

    OpenAPI spec version: v0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.ontology_api import OntologyApi  # noqa: E501
from swagger_client.rest import ApiException


class TestOntologyApi(unittest.TestCase):
    """OntologyApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.ontology_api.OntologyApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_ont(self):
        """Test case for add_ont

        Registers a brand new ontology  # noqa: E501
        """
        pass

    def test_delete_ont(self):
        """Test case for delete_ont

        Deletes a particular version or a whole ontology entry  # noqa: E501
        """
        pass

    def test_ont_get(self):
        """Test case for ont_get

        Gets information about registered ontologies or terms  # noqa: E501
        """
        pass

    def test_update_ont(self):
        """Test case for update_ont

        Updates a given ontology version or adds a new version  # noqa: E501
        """
        pass

    def test_upload_ont(self):
        """Test case for upload_ont

        Uploads an ontology file for subsequent registration  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
